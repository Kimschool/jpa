<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd">

	<!-- Root Context: defines shared resources visible to all other web components -->
			<!-- dataSourct를 빈에 등록 -->
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="com.mysql.jdbc.Driver"></property>
	    <property name="url" value="jdbc:mysql://localhost:3306/test"></property>
	    <property name="username" value="root"></property>
	    <property name="password" value="kimschool1"></property>
	</bean>

    <!-- 트랜잭션 관리자 등록 -->
<!--     <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="dataSource" ref="dataSource" />
    </bean> -->

     <!-- JPA 예외를 스프링 예외로 변환 -->
<!--     <bean class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
 -->
    <!-- JPA 설정 ( 엔티티 매니저 팩토리 등록 ) -->
    <!-- <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />

        @Entity 탐색 범위
        <property name="packagesToScan" value="com.kimschool.manage" />

        하이버네이트 구현체 사용
        <property name="jpaVendorAdapter">
            <bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter" />
        </property>

        하이버네이트 상세 설정
        <property name="jpaProperties">
            <props>
                <prop key="hibernate.dialect">org.hibernate.dialect.MySQL5InnoDBDialect</prop> 방언
                <prop key="hibernate.show_sql">true</prop>                          SQL 보기
                <prop key="hibernate.format_sql">true</prop>                        SQL 정렬해서 보기
                <prop key="hibernate.use_sql_comments">true</prop>                  SQL 주석 보기
                <prop key="hibernate.id.new_generator_mappings">true</prop>         JPA 표준에 맞게 새로운 키 생성 전략을 사용
                <prop key="hibernate.hbm2ddl.auto">create</prop>                    DDL 자동 생성
            </props>
        </property>
    </bean> -->

</beans>
